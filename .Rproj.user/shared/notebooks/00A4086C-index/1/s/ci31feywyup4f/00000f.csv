"0","# youtube %>% "
"0","#   skimr::skim()"
"0",""
"0","## Like to view ration"
"0","youtube %>% filter(year == 2020) %>% "
"0","  select(brand, title, where(is.numeric)) %>% "
"0","  na.omit() %>% "
"0","  group_by(brand,title) %>% "
"0","  summarise(l_to_v_ratio =like_count/view_count) %>% "
"0","  mutate(label=scales::percent(l_to_v_ratio,accuracy = 0.01))-> tt"
"1","[38;5;252m`summarise()` has grouped output by 'brand'. You can override using the `.groups` argument.[39m
"
"0","## GGplot of performance by brand"
"0","tt %>% "
"0","  ggplot(aes(reorder(brand,-l_to_v_ratio), l_to_v_ratio,fill=brand))+"
"0","  geom_col(width=.8)+"
"0","  scale_y_continuous(expand =c(0,0),label=scales::percent)+"
"0","  scale_fill_manual(values = my_pal, guide=""none"")+"
"0","  theme(axis.text.x = element_text(angle=45,vjust=1,hjust=1))+"
"0","  ylab(""Like to Views Ratio"")+"
"0","  xlab("""")"
